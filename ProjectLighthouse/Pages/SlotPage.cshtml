@page "/slot/{id:int}"
@using LBPUnion.ProjectLighthouse.Helpers.Extensions
@using LBPUnion.ProjectLighthouse.Types
@model LBPUnion.ProjectLighthouse.Pages.SlotPage

@{
    Layout = "Layouts/BaseLayout";
    Model.ShowTitleInPage = false;

    Model.Title = Model.Slot.Name;
    Model.Description = Model.Slot.Description;
}

@await Html.PartialAsync("Partials/SlotCardPartial", Model.Slot, new ViewDataDictionary(ViewData)
{
    {
        "User", Model.User
    },
    {
        "CallbackUrl", $"~/slot/{Model.Slot.SlotId}"
    },
    {
        "ShowLink", false
    },
    {
        "IsMobile", Model.Request.IsMobile()
    },
})
<br>

<div class="ui grid">
    <div class="eight wide column">
        <div class="ui blue segment">
            <h2>Description</h2>
            <p>@(string.IsNullOrEmpty(Model.Slot.Description) ? "This level has no description." : Model.Slot.Description)</p>
        </div>
    </div>
    <div class="eight wide column">
        <div class="ui red segment">
            <h2>Tags</h2>
            @{
                string[] authorLabels = Model.Slot.AuthorLabels.Split(",");
                if (authorLabels.Length == 1) // ..?? ok c#
                {
                    <p>This level has no tags.</p>
                }
                else
                {
                    foreach (string label in authorLabels.Where(label => !string.IsNullOrEmpty(label)))
                    {
                        <div class="ui blue label">@label.Replace("LABEL_", "")</div>
                    }
                }
            }
        </div>
    </div>
</div>                     

@if (Model.Photos != null && Model.Photos.Count != 0)
{
    <div class="ui purple segment">
        <h2>Most recent photos</h2>

        <div class="ui center aligned grid">
            @foreach (Photo photo in Model.Photos)
            {
                <div class="eight wide column">
                    @await Html.PartialAsync("Partials/PhotoPartial", photo)
                </div>
            }
        </div>
    </div>
}

@await Html.PartialAsync("Partials/CommentsPartial")

@if (Model.User != null && Model.User.IsAdmin)
{
    <div class="ui yellow segment">
        <h2>Admin Settings</h2>

        @if (Model.Slot.TeamPick)
        {
            <a href="/admin/slot/@Model.Slot.SlotId/removeTeamPick">
                <div class="ui pink button">
                    <i class="ribbon icon"></i>
                    <span>Remove Team Pick</span>
                </div>
            </a>
        }
        else
        {
            <a href="/admin/slot/@Model.Slot.SlotId/teamPick">
                <div class="ui pink button">
                    <i class="ribbon icon"></i>
                    <span>Team Pick</span>
                </div>
            </a>
        }

        <a href="/admin/slot/@Model.Slot.SlotId/delete">
            <div class="ui red button">
                <i class="trash icon"></i>
                <span>Delete</span>
            </div>
        </a>
    </div>
}